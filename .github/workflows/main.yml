name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

permissions:
  contents: read

env:
  ANSIBLE_HOME: ~/.ansible
  ANSIBLE_COLLECTIONS_PATH: ~/.ansible/collections
  PY_COLORS: "1"

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache ansible requirements
        id: cache-reqs
        uses: actions/cache@v4
        with:
          key: reqs-${{ runner.os }}-${{ hashFiles('requirements.yml') }}
          path: ${{ env.ANSIBLE_COLLECTIONS_PATH }}

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          cache: poetry

      - name: Install deps
        run: poetry install --no-root

      - name: Install requirements
        if: steps.cache-reqs.outputs.cache-hit != 'true'
        run: poetry run ansible-galaxy install -r requirements.yml

      - name: Lint code
        run: poetry run ansible-lint

  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        molecule-distro: [debian12, ubuntu2204]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache ansible requirements
        id: cache-reqs
        uses: actions/cache@v4
        with:
          key: reqs-${{ runner.os }}-${{ hashFiles('requirements.yml') }}
          path: ${{ env.ANSIBLE_COLLECTIONS_PATH }}

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v5
        with:
          cache: poetry

      - name: Install deps
        run: poetry install --no-root

      - name: Install requirements
        if: steps.cache-reqs.outputs.cache-hit != 'true'
        run: poetry run ansible-galaxy install -r requirements.yml

      - name: Run tests
        run: make test-ci
        env:
          MOLECULE_DISTRO: ${{ matrix.molecule-distro }}
