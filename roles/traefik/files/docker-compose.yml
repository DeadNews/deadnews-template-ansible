---
name: traefik

networks:
  dsproxy:
  traefik:
    external: true
services:
  traefik:
    image: traefik:v3.3.3@sha256:f1fdee7fda041872cff24e36a08f45ca53f006ded88f743a8e30e3d87ca52b48
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - dsproxy
    networks:
      - default
      - dsproxy
      - traefik
    healthcheck:
      test: [CMD, traefik, healthcheck, --ping]
      interval: 1m
      retries: 3
      timeout: 10s
      start_period: 1m
    ports:
      # "web" HTTP listener
      - 0.0.0.0:80:80/tcp
      # "websecure" HTTPS listener
      - 0.0.0.0:443:443/tcp
    command:
      - --accesslog=true
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --global.checknewversion=false
      - --log.level=WARN
      - --metrics.prometheus.addrouterslabels=true
      - --metrics.prometheus=true
      - --ping=true
      - --providers.docker.endpoint=tcp://dsproxy:2375
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --providers.docker=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.api_route.entrypoints=web
      - traefik.http.routers.api_route.rule=Host(`traefik.localhost`)
      - traefik.http.routers.api_route.service=api@internal
      - traefik.http.routers.api_route.middlewares=api_auth
      - traefik.http.middlewares.api_auth.basicauth.users=example:$$apr1$$YhtGlcCF$$YAf5de95WAOyUufiUV1F10

  # Security-enhanced proxy for the Docker Socket
  dsproxy:
    image: tecnativa/docker-socket-proxy:0.3.0@sha256:9e4b9e7517a6b660f2cc903a19b257b1852d5b3344794e3ea334ff00ae677ac2
    container_name: traefik-dsproxy
    restart: unless-stopped
    networks:
      - dsproxy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:2375/version || exit 1
      interval: 1m
      retries: 3
      timeout: 10s
      start_period: 1m
    volumes:
      - ${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock:ro
    environment:
      DISABLE_IPV6: true
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1

  vector:
    image: timberio/vector:0.44.0-alpine@sha256:e285e1543366ac306f3957c25d3aca4d2f86855ae274fa4de3522676d72fa0df
    container_name: traefik-vector
    restart: unless-stopped
    depends_on:
      - traefik
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:8686/health || exit 1
      interval: 1m
      retries: 3
      timeout: 10s
      start_period: 1m
    volumes:
      - ./vector.yml:/etc/vector/vector.yaml:ro

  # Simple service for testing
  whoami:
    image: traefik/whoami:v1.10.4@sha256:1699d99cb4b9acc17f74ca670b3d8d0b7ba27c948b3445f0593b58ebece92f04
    container_name: whoami
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - traefik.http.routers.whoami.entrypoints=web
