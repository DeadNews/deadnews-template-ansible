---
networks:
  traefik:
    external: true
  socket-proxy:
    external: false

services:
  traefik:
    image: traefik:v3.0.4@sha256:a208c74fd80a566d4ea376053bff73d31616d7af3f1465a7747b8b89ee34d97e
    container_name: traefik
    restart: unless-stopped
    networks:
      - traefik
      - socket-proxy
    depends_on:
      - socket-proxy
    healthcheck:
      test: [CMD, traefik, healthcheck, --ping]
      interval: 60s
      retries: 3
      timeout: 10s
      start_period: 60s
    ports:
      # "web" HTTP listener
      - 0.0.0.0:80:80/tcp
      # "websecure" HTTPS listener
      - 0.0.0.0:443:443/tcp
      # "traefik" internal services
      - 127.0.0.1:8080:8080/tcp
    command:
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --global.checknewversion=false
      - --log.level=WARN
      - --metrics.prometheus=true
      - --ping=true
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --providers.docker=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.api_route.entrypoints=web
      - traefik.http.routers.api_route.rule=Host(`traefik.localhost`)
      - traefik.http.routers.api_route.service=api@internal
      - traefik.http.routers.api_route.middlewares=api_middle
      - traefik.http.middlewares.api_middle.basicauth.users=example:$$apr1$$YhtGlcCF$$YAf5de95WAOyUufiUV1F10

  # Security-enhanced proxy for the Docker Socket
  socket-proxy:
    image: tecnativa/docker-socket-proxy:0.2.0@sha256:083bd0ed8783e366d745f332f0e4489816dd35d984bef8f16e6d89484a22c082
    container_name: traefik-socket-proxy
    restart: unless-stopped
    networks:
      - socket-proxy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:2375/version || exit 1
      interval: 60s
      retries: 3
      timeout: 10s
      start_period: 60s
    volumes:
      - ${XDG_RUNTIME_DIR:-/var/run}/docker.sock:/var/run/docker.sock:ro
    environment:
      NETWORKS: 1
      SERVICES: 1
      CONTAINERS: 1
      TASKS: 1

  # Simple service for testing
  whoami:
    image: traefik/whoami:v1.10.2@sha256:1474027c316661cdec87df2623e13a41e7e1ce0ba99c24917631de8f300b5420
    container_name: whoami
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - traefik.http.routers.whoami.entrypoints=web
